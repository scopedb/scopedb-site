---
import HeaderLink from "./HeaderLink.astro";
import MobileMenu from "./MobileMenu.astro";
import {CalendarBookingUrl, SiteName} from "@/src/consts";
import FloatingButton from "./calcom/FloatingButton";
---

<header id="header" class="transition-all duration-300 ease-in-out">
    <nav class="
         max-w-[1440px] mx-auto px-[12px] md:px-[24px] xl-[32px]  py-[16px]
	    flex justify-between items-center relative
	 ">
        <div>
            <a href="/">
                <img src="/scopedb-logo.png" alt={SiteName} width={120} height={35}/>
            </a>
        </div>

        <!-- Desktop Navigation -->
        <div class="hidden md:flex gap-8 text-[14px]">
            <!-- <HeaderLink href="/products">Products</HeaderLink> -->
            <HeaderLink href="https://docs.scopedb.io/">Reference</HeaderLink>
            <HeaderLink href="/blog">Blog</HeaderLink>
            <HeaderLink href="/contact">Contact</HeaderLink>
            <!-- <HeaderLink href="/changelog">Changelog</HeaderLink> -->
        </div>

        <!-- Mobile Menu Button -->
        <button class="md:hidden flex flex-col gap-1 w-6 h-6 justify-center items-end" id="mobile-menu-button">
            <span class="w-[18px] h-[2px] bg-[#000]/80 transition-all rounded-[4px] duration-300 ease-in-out" id="line1"></span>
            <span class="w-[18px] h-[2px] bg-[#000]/80 transition-all rounded-[4px] duration-300 ease-in-out" id="line2"></span>
            <span class="w-[18px] h-[2px] bg-[#000]/80 transition-all rounded-[4px] duration-300 ease-in-out" id="line3"></span>
        </button>

        <!-- Desktop Book Demo Button -->
        <div class="hidden md:block rounded-[10px]"
             style="border: 1px solid var(--color-button-secondary-border);">
            <button class="text-[14px] font-medium px-[16px] py-[8px] cursor-pointer"
                    data-cal-link={CalendarBookingUrl}>
                Book a demo
            </button>
        </div>
    </nav>

    <FloatingButton client:only="react"/>
</header>

<!-- Mobile Menu Component -->
<MobileMenu />

<script>
document.addEventListener('DOMContentLoaded', function() {
    const mobileMenuButton = document.getElementById('mobile-menu-button');
    const header = document.getElementById('header');
    const line1 = document.getElementById('line1');
    const line2 = document.getElementById('line2');
    const line3 = document.getElementById('line3');
    const mobileMenuOverlay = document.getElementById('mobile-menu-overlay');
    const mobileMenuContainer = document.getElementById('mobile-menu-container');

    let mobileMenuOpen = false;

    // Sticky header functionality
    let scrollThreshold = 100;

    function handleScroll() {
        const currentScrollY = window.scrollY;

        if (header) {
            if (currentScrollY > scrollThreshold) {
                header.classList.add('fixed', 'top-0', 'left-0', 'right-0', 'z-[100]', 'bg-white/95', 'backdrop-blur-sm',);
            } else {
                header.classList.remove('fixed', 'top-0', 'left-0', 'right-0', 'z-[100]', 'bg-white/95', 'backdrop-blur-sm',);
            }
        }
    }

    // 节流滚动事件
    let ticking = false;
    function requestTick() {
        if (!ticking) {
            requestAnimationFrame(handleScroll);
            ticking = true;
            setTimeout(() => { ticking = false; }, 16);
        }
    }

    window.addEventListener('scroll', requestTick);

    // 打开移动菜单
    function openMobileMenu() {
        if (mobileMenuOpen) return;

        mobileMenuOpen = true;

        // 显示菜单 - 使用 Tailwind 类
        if (mobileMenuOverlay && mobileMenuContainer) {
            // 显示遮罩层
            mobileMenuOverlay.classList.remove('opacity-0', 'invisible', 'pointer-events-none');
            mobileMenuOverlay.classList.add('opacity-100', 'visible');

            // 显示菜单容器
            mobileMenuContainer.classList.remove('translate-x-full');
            mobileMenuContainer.classList.add('translate-x-0');
        }

        // 禁用页面滚动
        document.body.style.overflow = 'hidden';

        // 汉堡包动画
        if (line1 && line2 && line3) {
            line1.style.transform = 'rotate(45deg) translate(6px, 6px)';
            line2.style.opacity = '0';
            line3.style.transform = 'rotate(-45deg) translate(6px, -6px)';
        }
    }

    // 关闭移动菜单
    function closeMobileMenu() {
        if (!mobileMenuOpen) return;

        mobileMenuOpen = false;

        // 隐藏菜单 - 使用 Tailwind 类
        if (mobileMenuOverlay && mobileMenuContainer) {
            // 隐藏遮罩层
            mobileMenuOverlay.classList.remove('opacity-100', 'visible');
            mobileMenuOverlay.classList.add('opacity-0', 'invisible', 'pointer-events-none');

            // 隐藏菜单容器
            mobileMenuContainer.classList.remove('translate-x-0');
            mobileMenuContainer.classList.add('translate-x-full');
        }

        // 恢复页面滚动
        document.body.style.overflow = '';

        // 汉堡包动画还原
        if (line1 && line2 && line3) {
            line1.style.transform = '';
            line2.style.opacity = '';
            line3.style.transform = '';
        }
    }

    // 绑定菜单按钮事件
    if (mobileMenuButton) {
        mobileMenuButton.addEventListener('click', openMobileMenu);
    }

    // 监听移动菜单组件的关闭事件
    window.addEventListener('closeMobileMenu', closeMobileMenu);
});
</script>
