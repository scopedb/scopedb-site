---
import { CalendarDays, ChevronDown } from "@lucide/astro";
import { Image } from "astro:assets";
import ExploreMore from "../ExploreMore.astro";
import CircleCheck from "./assets/circlecheck.png";
import { CONTACT_WEBHOOK_URL,CAL_COM_BOOKING_LINK } from "../../consts";
import Footer from "../Footer.astro";

---

<div class="container mx-auto px-[16px]">
  <h1
    class:list={[
      "text-[40px] font-medium text-center",
      "mx-auto",
      "mt-[60px]",
    ]}
  >
    How can we Help?
  </h1>
  <p
    class:list={[
      "text-[20px] font-normal text-[var(--color-secondary)] text-center",
      "max-w-[600px] mx-auto leading-tight",
      "mt-[24px]",
    ]}
  >
    Contact our sales and support teams for demos, onboarding guidance, or
    answers to product questions.
  </p>

  <div
    class:list={[
      "max-w-[1200px] mx-auto mt-[60px]",
      "flex bg-[rgba(0,0,0,0.01)] rounded-[12px] p-[64px]",
      "flex-col",
      "md:flex-row md:items-center md:justify-between",
    ]}
  >
    <div>
      <h2 class="text-[24px] font-semibold">Sales</h2>
      <p
        class="mt-[20px] text-[16px] leading-tight text-[var(--color-secondary)] max-w-[420px]"
      >
        Speak to our sales team about plans, pricing, enterprise contracts, or
        request a demo. Talk to sales.
      </p>
      <ul
        class="mt-[32px] flex flex-col gap-[12px] text-[14px] text-[var(--color-secondary)]"
      >
        <li>
          <span class="flex items-center gap-[12px]">
            <Image
              class="w-[20px] h-[20px]"
              src={CircleCheck}
              alt="Circle Check"
            />
            Request a demo
          </span>
        </li>
        <li>
          <span class="flex items-center gap-[12px]">
            <Image
              class="w-[20px] h-[20px]"
              src={CircleCheck}
              alt="Circle Check"
            />
            Understand what problems ScopedDB can actually solve.
          </span>
        </li>
        <li>
          <span class="flex items-center gap-[12px]">
            <Image
              class="w-[20px] h-[20px]"
              src={CircleCheck}
              alt="Circle Check"
            />
            Get onboarding help
          </span>
        </li>
      </ul>

      <button
        class="mt-[32px] bg-[var(--color-brand)] py-[10px] px-[16px] rounded-[10px] cursor-pointer"
        data-cal-link={CAL_COM_BOOKING_LINK}
      >
        <span class="flex items-center gap-[10px] text-[14px] text-[white]">
          <CalendarDays width={16} height={16} />
          Book A Demo
        </span>
      </button>
    </div>
    <div class="md:w-[420px] md:mt-0 mt-[40px]">
      <form id="contact-form" class="flex flex-col gap-[24px]">
        <div class="flex flex-col gap-[12px]">
          <label for="name" class="text-[14px] text-[var(--color-primary)]"
            >Full Name</label
          >
          <input
            class="rounded-[10px] border border-[#ECECEC] p-[12px] text-[14px] text-[var(--color-primary)] bg-white"
            type="text"
            id="name"
            name="name"
            placeholder="Kevin"
          />
        </div>
        <div class="flex flex-col gap-[12px]">
          <label for="email" class="text-[14px] text-[var(--color-primary)]"
            >Email</label
          >
          <input
            class="rounded-[10px] border border-[#ECECECEC] p-[12px] text-[14px] text-[var(--color-primary)] bg-white"
            type="email"
            id="email"
            name="email"
            placeholder="kevin@gmail.com"
          />
        </div>
        <!-- company size -->
        <div class="flex flex-col gap-[12px]">
          <label
            for="company-size"
            class="text-[14px] text-[var(--color-primary)]">Company Size</label
          >
          <div class="relative">
            <select
              class="w-full rounded-[10px] border border-[#ECECECEC] p-[12px] text-[14px] text-[var(--color-primary)] bg-white"
              id="company-size"
              name="company-size"
              style="appearance: none"
            >
              <option value="1-10">1-10</option>
              <option value="11-50">11-50</option>
              <option value="51-200">51-200</option>
              <option value="201-1000">201-1000</option>
              <option value="1000+">1000+</option>
            </select>
            <ChevronDown
              class:list={[
                "absolute right-[12px] top-[50%] translate-y-[-50%] w-[20px] h-[20px]",
                "text-[var(--color-primary)]",
                "pointer-events-none",
              ]}
            />
          </div>
        </div>
        <!-- text area how can we help you -->
        <div class="flex flex-col gap-[12px]">
          <label for="message" class="text-[14px] text-[var(--color-primary)]"
            >How can we help you?</label
          >
          <textarea
            class="rounded-[10px] border border-[#ECECECEC] p-[12px] text-[14px] text-[var(--color-primary)] bg-white"
            id="message"
            name="message"
            placeholder="I'm interested in ScopeDB..."
            rows={4}></textarea>
        </div>
        <!-- button submit -->
        <button
          type="submit"
          class="bg-[#FFFFFF] border border-[#ECECEC] py-[10px] px-[16px] rounded-[10px] cursor-pointer w-full"
        >
          <span
            class="gap-[10px] text-[14px] text-[var-(--color-primary)] text-center"
          >
            Send Message
          </span>
        </button>
      </form>

      <!-- Success State -->
      <div id="success-state" class="text-center hidden">
        <div
          class="w-[80px] h-[80px] bg-[var(--color-brand)] rounded-full flex items-center justify-center mx-auto mb-[24px]"
        >
          <svg
            width="40"
            height="40"
            viewBox="0 0 24 24"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M20 6L9 17l-5-5"
              stroke="white"
              stroke-width="2"
              stroke-linecap="round"
              stroke-linejoin="round"></path>
          </svg>
        </div>
        <h3
          class="text-[24px] font-semibold text-[var(--color-primary)] mb-[16px]"
        >
          Thanks for contacting us!
        </h3>
        <p class="text-[16px] text-[var(--color-secondary)]">
          We will get in touch with you shortly.
        </p>
      </div>
    </div>
  </div>
  <div class="mt-[80px] mb-[160px] max-w-[1200px] mx-auto">
    <ExploreMore showBlog={false} />
  </div>
  
</div>
<Footer />
<script define:vars={{ CONTACT_WEBHOOK_URL }}>
  document.addEventListener("DOMContentLoaded", function () {
    const form = document.getElementById("contact-form");
    const submitButton = form?.querySelector('button[type="submit"]');
    const successState = document.getElementById("success-state");

    if (!form || !submitButton || !successState) return;

    submitButton.addEventListener("click", async function (e) {
      e.preventDefault();

      // Get form data
      const formData = new FormData(form);
      const data = {
        name: formData.get("name"),
        email: formData.get("email"),
        "company-size": formData.get("company-size"),
        message: formData.get("message"),
      };

      // Show loading state
      submitButton.disabled = true;
      submitButton.innerHTML =
        '<span class="gap-[10px] text-[14px] text-[var(--color-primary)] text-center">Sending...</span>';

      try {
        const response = await fetch(CONTACT_WEBHOOK_URL, {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify(data),
        });

        if (response.ok) {
          // Hide form and show success state
          form.classList.add("hidden");
          successState.classList.remove("hidden");
        } else {
          throw new Error("Submission failed");
        }
      } catch (error) {
        console.error("Error:", error);
        alert(
          "Sorry, there was an error sending your message. Please try again."
        );
        // Restore button state
        submitButton.disabled = false;
        submitButton.innerHTML =
          '<span class="gap-[10px] text-[14px] text-[var(--color-primary)] text-center">Send Message</span>';
      }
    });
  });
</script>
